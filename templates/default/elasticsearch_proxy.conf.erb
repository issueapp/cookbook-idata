server {
  listen   443;
  server_name  elasticsearch;
  client_max_body_size 50M;

  error_log   /var/log/nginx/elasticsearch-errors.log;
  access_log  /var/log/nginx/elasticsearch.log;

  location / {

    # Deny Nodes Shutdown API
    if ($request_filename ~ "_shutdown") {
      return 403;
      break;
    }

    if ($request_filename ~ "_cluster") {
      return 403;
      break;
    }

    # Pass requests to ElasticSearch
    proxy_pass http://localhost:9200/;
    proxy_redirect off;

    proxy_set_header  X-Real-IP  $remote_addr;
    proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header  Host $http_host;

    # For CORS Ajax
    proxy_pass_header Access-Control-Allow-Origin;
    proxy_pass_header Access-Control-Allow-Methods;
    proxy_pass_header Access-Control-Allow-Headers;
    proxy_pass_header Access-Control-Allow-Credentials;

    # Authorize access
    auth_basic           "ElasticSearch";
    auth_basic_user_file /etc/nginx/htpasswd;
  }

  location /status {
    proxy_method HEAD;
    proxy_intercept_errors on;
    proxy_pass http://localhost:9200/;
  }

  ssl on;
  ssl_certificate /etc/nginx/ssl/es.issue.by.crt;
  ssl_certificate_key /etc/nginx/ssl/es.issue.by.pem;
  
  server_tokens off;
  ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
  ssl_prefer_server_ciphers on;
  ssl_session_timeout 10m;
  ssl_ciphers TLS_ECDHE_RSA_WITH_RC4_128_SHA:TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA:TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA:TLS_ECDHE_RSA_WITH_3DES_EDE_CBC_SHA:TLS_DHE_RSA_WITH_AES_128_CBC_SHA:HIGH:!aNULL:!MD5;
  ssl_session_cache shared:SSL:10m;
}
